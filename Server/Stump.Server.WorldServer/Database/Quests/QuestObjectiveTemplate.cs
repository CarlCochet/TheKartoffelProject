using System;
using System.Collections.Generic;
using System.Linq;
using Stump.Core.IO;
using Stump.DofusProtocol.D2oClasses;
using Stump.DofusProtocol.D2oClasses.Tools.D2o;
using Stump.DofusProtocol.Enums;
using Stump.ORM;
using Stump.ORM.SubSonic.SQLGeneration.Schema;

namespace Stump.Server.WorldServer.Database.Quests
{
    public class QuestObjectiveRelator
    {
        public static string FetchQuery = "SELECT * FROM quests_objectives";
    }

    [TableName("quests_objectives")]
    public class QuestObjectiveTemplate : IAutoGeneratedRecord, IAssignedByD2O
    {
        private string m_parametersCsv;
        private int[] m_parameters;

        public int Id
        {
            get;
            set;
        }
        
        public int StepId
        {
            get;
            set;
        }

        public QuestObjectiveTypeEnum Type => (QuestObjectiveTypeEnum) TypeId;

        public int TypeId
        {
            get;
            set;
        }

        public int DialogId
        {
            get;
            set;
        }

        [NullString]
        private string ParametersCSV
        {
            get { return m_parametersCsv; }
            set
            {
                m_parametersCsv = value;
                m_parameters = value?.FromCSV<int>(",");
            }
        }

        [Ignore]
        public int[] Parameters
        {
            get { return m_parameters ?? (m_parameters = ParametersCSV.FromCSV<int>(",")); }
            set
            {
                m_parameters = value;
                m_parametersCsv = value?.ToCSV(",");
            }
        }

        public bool DungeonOnly
        {
            get;
            set;
        }
        
        public int CoordsX
        {
            get;
            set;
        }

        public int CoordsY
        {
            get;
            set;
        }

        public int TriggeredByObjectiveId
        {
            get;
            set;
        }

        [Ignore]
        public QuestObjectiveTemplate[] ObjectivesToTrigger
        {
            get;
            set;
        }

        public Game.Quests.QuestObjective GenerateObjective()
        {
            switch (Type)
            {
                default:
                    throw new NotImplementedException($"Objective {Type} not implemented");
            }
        }

        public void AssignFields(object d2oObject)
        {
            var objective = (QuestObjective) d2oObject;
            Id = (int)objective.Id;
            StepId = (int) objective.stepId;
            TypeId = (int) objective.TypeId;
            DialogId = objective.DialogId;
            Parameters = new[]
            {
                objective.Parameters.Parameter0,
                objective.Parameters.Parameter1,
                objective.Parameters.Parameter2,
                objective.Parameters.Parameter3,
                objective.Parameters.Parameter4
            }.Take((int)objective.Parameters.NumParams).ToArray();
            DungeonOnly = objective.Parameters.dungeonOnly;
            CoordsX = objective.Coords.x;
            CoordsY = objective.coords.y;
        }
    }
}